[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"


[project]
name = "toyllm"
version = "0.1.0"
description = "Toy LLM"
keywords=["machine learning", "deep learning", "llm"]
license = {text = "Apache 2.0"}
readme = "README.md"
authors = [
    {name = "Xiangzhuang Shen", email = "datahonor@gmail.com"},
]

classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">= 3.11,<3.13"
dependencies = [
    "numpy",
    "torch",
    "tiktoken",
    "jaxtyping",
    "typer>=0.15.2",
    "rich>=13.9.4",
    "typeguard>=2.13.3",
]

[project.optional-dependencies]
dev = [
    "nvitop",
    "pre-commit",
    "ipython",
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "hypothesis>=6.112.0",
    "commitizen",
    "pandas>=2.2.3",
]
plot = [
    "matplotlib",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocstrings",
    "mkdocs-bibtex",
    "mkdocstrings-python",
    "mkdocs-git-committers-plugin-2>=2.4.1",
    "mkdocs-git-revision-date-localized-plugin>=1.2.9",
]
example = [
    "marimo>=0.8.22",
]

[tool.setuptools]
zip-safe = true
include-package-data = true

[tool.setuptools.packages.find]
include = ["toyllm*"]
namespaces = false


[tool.uv]
extra-index-url = ["https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"]


[tool.mypy]
strict = true
# exclude all files in playground
exclude = ["playground/*"]
ignore_missing_imports = true
disallow_untyped_decorators = false


# Ruff configuration: https://docs.astral.sh/ruff/configuration/#configuring-ruff
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # https://docs.kidger.site/jaxtyping/faq/#flake8-or-ruff-are-throwing-an-error
    "F722",   # jaxtyping doc said it's ok to disable this

    "FBT001",  # Boolean-typed positional argument in function definition
    "FBT002",  # Boolean default positional argument in function definition
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D107",   # undocumented-public-init
    "T201",   # print
    "RET504", # Unnecessary assignment before `return` statement
    "ERA001", # Found commented-out code
    "PLR0913", #  Too many arguments in function definition
    "RUF003",  # Comment contains ambiguous(FULLWIDTH COMMA)
    "COM812"

]
pydocstyle = { convention = "google" }

[tool.ruff.lint.per-file-ignores]
'playground/glimpse/top-down/*' = ["ALL"]
'toyllm/cli/benchmark*' = ["ALL"]
'tests/*' = [
    "S101", # assert
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
