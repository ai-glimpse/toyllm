name: Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      UV_HTTP_TIMEOUT: 900 # max 15min to install deps
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          # Adding cache-dependency-path for better cache invalidation
          cache-dependency-path: |
            pyproject.toml
          cache-key: ${{ runner.os }}-${{ matrix.python-version }}-uv

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      # - name: Install the project
      #   run: uv sync --all-extras --dev
      - name: Install the project
      - name: Install the project
        run: |
          uv venv -p ${{ matrix.python-version }}
          source .venv/bin/activate
          uv pip install ruff mypy

      - name: Lint with Mypy
        run: uv run mypy .

      - name: Lint with Ruff
        run: uv run ruff check

      # Disable tests for now
      # - name: Run tests and generate coverage report
      #   run: uv run pytest --doctest-modules -v --cov=toyllm --junitxml=junit.xml -o junit_family=legacy --cov-fail-under 0 --cov-report=term --cov-report=xml --cov-report=html toyllm tests

      # - name: Upload test results to Codecov
      #   if: success() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      #   uses: codecov/test-results-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}

      - name: Minimize uv cache
        run: uv cache prune --ci
